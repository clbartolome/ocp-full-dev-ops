---
- name: Create component application project
  kubernetes.core.k8s:
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: AppProject
      metadata:
        name: "{{ item.name }}"
        namespace: openshift-gitops
      spec:
        description: "{{ item.name }} Argocd application project"
        destinations:
        - name: '*'
          namespace: '*'
          server: '*'
        sourceRepos:
        - '*'
    state: present

- name: Create component application
  kubernetes.core.k8s:
    definition:
      apiVersion: argoproj.io/v1alpha1
      kind: Application
      metadata:
        name: "{{ item.name }}"
        namespace: "openshift-gitops"
        finalizers:
          - resources-finalizer.argocd.argoproj.io
      spec:
        project: "{{ item.name }}"
        source:
          repoURL: http://gitea.{{ ocp_ingress_domain[0] }}/gitea/{{ item.name }}
          targetRevision: master
          path: "{{ item.argo_path }}"
        destination:
          server: https://kubernetes.default.svc
        syncPolicy:
          automated: {}
    state: present

# - name: Get ArgoCD bearer token
#   ansible.builtin.uri:
#     url: "https://argocd-server-ansible-eda-demo.{{ ocp_ingress_domain }}/api/v1/session"
#     method: POST
#     validate_certs: false
#     headers:
#       Content-Type: application/json
#     body_format: json
#     body:
#       username: admin
#       password: redhat
#   register: argocd_token

#   - name: "Refresh ArgoCD application {{ dynatrace_tag_app }}"
#   ansible.builtin.uri:
#     url: "https://argocd-server-ansible-eda-demo.{{ ocp_ingress_domain }}/api/v1/applications/{{ dynatrace_tag_app }}?refresh=true"
#     method: GET
#     return_content: true
#     validate_certs: false
#     headers:
#       Content-Type: application/json
#       Authorization: "Bearer {{ argocd_token.json.token }}"

#   - name: "Check sync ArgoCD application {{ dynatrace_tag_app }}"
#   ansible.builtin.uri:
#     url: "https://argocd-server-ansible-eda-demo.{{ ocp_ingress_domain }}/api/v1/applications/{{ dynatrace_tag_app }}"
#     method: GET
#     return_content: true
#     validate_certs: false
#     headers:
#       Content-Type: application/json
#       Authorization: "Bearer {{ argocd_token.json.token }}"
#   register: argocd_sync_status
#   until: argocd_sync_status.json.status.health.status == "Healthy" and argocd_sync_status.json.operation is undefined
